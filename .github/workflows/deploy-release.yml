# WARNING: This file is automatically generated by ../regenerate-actions.sh

name: Release

on:
  release:
    types:
    - published

defaults:
  run:
    shell: bash


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          5.0.x
          9.x

    - name: Setup NuGet
      run: |
        dotnet nuget update source github --store-password-in-clear-text --username AshleighAdams --password ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        dotnet nuget enable source github

    - name: Setup MinVer
      run: |
        git fetch --tags --force
        git checkout "${GITHUB_REF#refs/*/}"
        dotnet tool install --global minver-cli --version 2.5.0


    - name: Verify Tag
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      run: |
        [[ "v$(minver --tag-prefix=v)" == "${GITHUB_REF#refs/*/}" ]] # error out if the versions don't match

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Debug --logger GitHubActions -p:CollectCoverage=true
        -p:CoverletOutputFormat=cobertura

    - name: Pack
      run: dotnet pack -p:PackageOutputPath="$(pwd)/artifacts" --configuration Release
        --no-restore

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: artifacts
        if-no-files-found: error
        path: |
          artifacts/*

  build-standalone-binaries:
    name: Build Standalone Binaries
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - rid: win-x64
          os: windows-latest
          exe: verlite.exe
        - rid: linux-x64
          os: ubuntu-latest
          exe: verlite
        - rid: osx-x64
          os: macos-13
          exe: verlite
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          5.0.x
          9.x

    - name: Publish
      run: |
        dotnet publish -r "${rid}" -c Release src/Verlite.CLI/Verlite.CLI.csproj -p:VerliteAot=true -o build
        mkdir -p artifacts
        cp "build/${exe}" "artifacts/${exe}"
        cd artifacts/
        ./${exe} --version
        tar -zcvf "verlite-${rid}.tar.gz" "${exe}"
        rm "${exe}"
      env:
        rid: ${{ matrix.rid }}
        exe: ${{ matrix.exe }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: artifacts-${{ matrix.rid }}
        if-no-files-found: error
        path: |
          artifacts/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
    - build
    - build-standalone-binaries
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          5.0.x
          9.x

    - name: Setup NuGet
      run: |
        dotnet nuget update source github --store-password-in-clear-text --username AshleighAdams --password ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        dotnet nuget enable source github

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: '*'
        merge-multiple: true

    - name: Create Release
      run: |
        set -x
        tag="${GITHUB_REF#refs/*/}"
        files=()

        IFS=$'\n';
        for asset in $(find ./artifacts -name "verlite-*.tar.gz"); do
          files+=("$asset")
        done

        IFS=$'\n';
        for asset in $(find ./artifacts -name "*.nupkg"); do
          files+=("$asset")
        done

        gh release upload "$tag" "${files[@]}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Nuget
      run: |
        dotnet nuget push 'artifacts/*.nupkg' -k ${GITHUB_TOKEN} -s github --skip-duplicate --no-symbols
        dotnet nuget push 'artifacts/*.nupkg' -k ${NUGETORG_TOKEN} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NUGETORG_TOKEN: ${{ secrets.NUGETORG_TOKEN }}
